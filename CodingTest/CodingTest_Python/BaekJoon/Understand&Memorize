




## 1.n자리 k진수 


# def recur(depth):
#     if depth == n:
#         for i in arr:
#             print(i,end=" ")
#         print()
#         return

    
#     for i in range(k):
#         arr.append(i)
#         recur(depth+1)
#         arr.pop()




# n,k = map(int,input().split())

# arr = []

# recur(0)



## 2.중복을 허용하지 않는 "순열"


# def recur(depth):
#     if depth == k:
#         for i in range(k):
#             print(arr[i],end=" ")
#         print()
#         return
    
#     for i in range(1,n+1):
#         if visited[i]:
#             continue
        
#         visited[i] = True
#         arr.append(i)
#         recur(depth+1)
#         arr.pop()
#         visited[i] = False

# n,k = map(int,input().split())

# arr = []

# visited = [0] * (n+1)

# recur(0)



## 3. 중복을 허용하지 않는 "조합"

# def recur(depth,start):
#     if depth == k:
#         for i in range(k):
#             print(arr[i],end=" ")
#         print()
#         return

    
#     for i in range(start,n+1):
#         if visited[i]:
#             continue

#         visited[i] = True
#         arr.append(i)
#         recur(depth+1,i+1)
#         arr.pop()
#         visited[i] = False



# n,k = map(int,input().split())

# arr = []

# visited = [0] * (n+1)

# recur(0,1)



## 4. 현재껄 고른다, 안 고른다 "조합"문제


# def recur(cur):
#     if cur == n:
#         for i in arr:
#             print(i,end=" ")
#         print()
#         return
    
#     arr.append(cur)
#     recur(cur+1)
#     arr.pop()
#     recur(cur+1)

# n = int(input())

# arr = []

# recur(0)